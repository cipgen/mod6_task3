# Docker and Git Configuration
variables:
  SUPPORT_IMAGE: "docker:24.0.7"
  SUPPORT_SERVICE: "docker:24.0.7-dind"
  VER: v1.0.8
  TARGETOS: linux
  TARGETARCH: amd64

stages:
  - clone
  - test
  - build
  - makeimage
  - push

# Clone stage for checking out the code
clone-job:
  stage: clone
  script:
    - git clone <repository_url>
    - echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" > build.env
    - echo "BUILD_URL=github.com/cipgen/kbot" >> build.env
  artifacts:
    reports:
      dotenv: build.env
    expire_in: 1 hour

# Test stage
test-job:
  stage: test
  script:
    - go test -v
  needs:
    - clone-job

# Build stage
build-job:
  stage: build
  script:
    - gofmt -s -w ./
    - go get -d -v
    - CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -v -o ./build/kbot -ldflags "-X=${BUILD_URL}/cmd.appVersion=${VERSION}"
  artifacts:
    paths:
      - ./build/kbot
    expire_in: 1 hour
  needs:
    - test-job

# Image creation stage
makeimage-job:
  stage: makeimage
  image: $SUPPORT_IMAGE
  services:
    - name: $SUPPORT_SERVICE
      alias: docker
  script:
    - docker build . -t ${CI_REGISTRY_IMAGE}:${VER}-${TARGETOS}-${TARGETARCH} --cache-from ${CI_REGISTRY_IMAGE}:latest --build-arg TARGETOS=${TARGETOS} --build-arg TARGETARCH=${TARGETARCH}
  needs:
    - build-job

# Push stage
push-job:
  stage: push
  script:
    - docker push ${CI_REGISTRY_IMAGE}:${VER}-${TARGETOS}-${TARGETARCH}
  needs:
    - makeimage-job
