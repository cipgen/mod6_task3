image: golang:1.21

variables:
  REPO: "https://github.com/cipgen/kbot"
  BRANCH: "main"
  REGISTRY: "registry.gitlab.com/cipgen"
  OS: linux
  ARCH: amd64
  VER: v1.0.9
  APP: kbot
  GIT_DEPTH: 1

  TARGETOS: linux
  TARGETARCH: amd64
  BUILDS_DIR: out


  SUPPORT_IMAGE: "docker:24.0.7"
  SUPPORT_SERVICE: "docker:24.0.7-dind" 

  #SUPPORT_IMAGE: "docker:19.03.12"
  #SUPPORT_SERVICE: "docker:19.03.12-dind" 


stages:
  - clone
  - test
  - build
  - image
  - push

clone_repository:
  stage: clone
  script:
    - echo 'CLONE REPOSITORY'
    - rm -rf kbot || true  # This will ignore errors if the directory doesn't exist
    - git clone -b $BRANCH $REPO

test_execution:
  stage: test
  script:
    - echo 'TEST EXECUTION STARTED'
    - make test


build-job:
  stage: build
  script:
    - gofmt -s -w ./
    - go get
    - CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -v -o ./${BUILDS_DIR}/kbot -ldflags "-X=${BUILD_URL}/cmd.appVersion=${VERSION}"


image-job:
  stage: image
  image: $SUPPORT_IMAGE
  services:
    - name: $SUPPORT_SERVICE
      alias: docker
  variables:
    IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${VER}-${TARGETOS}-${TARGETARCH}
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build . -t $IMAGE_TAG --build-arg TARGETOS=${TARGETOS} --build-arg TARGETARCH=${TARGETARCH}
    - docker push $IMAGE_TAG
    - docker logout

