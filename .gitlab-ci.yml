image: golang:1.21


variables:
  REPO: "https://github.com/cipgen/kbot"
  BRANCH: "main"
  REGISTRY: "registry.gitlab.com/cipgen"
  OS: "linux"
  ARCH: "amd64"
  VER: "v1.0.9"
  APP: "kbot"



stages:
  - clone
  - test
  - build
  - image
  - push

clone_repository:
  stage: clone
  script:
    - echo 'CLONE REPOSITORY'
    - rm -rf kbot || true  # This will ignore errors if the directory doesn't exist
    - git clone -b $BRANCH $REPO

test_execution:
  stage: test
  script:
    - echo 'TEST EXECUTION STARTED'
    - make test

build_execution:
  stage: build
  before_script:
    - export SHORTVERS=$(git rev-parse --short HEAD)
    - echo "Short version is $SHORTVERS"
  script:
    - mkdir -p output
    - VERSION="${VER}-${SHORTVERS}"
    - echo $VERSION > output/art_version
    - echo "Full version is $VERSION"
    - echo 'BUILD EXECUTION STARTED'
    - make build TARGETOS=$OS TARGETARCH=$ARCH VERSION=$VERSION
  artifacts:
    paths:
      - output/

    
image_execution:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  #variables:
    #IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${VER}-${TARGETOS}-${TARGETARCH}
  script:
    - make image REGISTRY=$REGISTRY APP=$APP VERSION=$VERSION TARGETOS=$OS TARGETARCH=$ARCH
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build . -t $IMAGE_TAG --build-arg TARGETOS=${TARGETOS} --build-arg TARGETARCH=${TARGETARCH}
    - docker push $IMAGE_TAG
    - docker logout